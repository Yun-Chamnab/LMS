{"remainingRequest":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\src\\views\\exam\\TakeExam.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\src\\views\\exam\\TakeExam.vue","mtime":1615999244816},{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L3hhbXBwL2h0ZG9jcy9MTVMvRXhhbV9zZXJ2aWNlL0xNUy10ZW1wbGF0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7Cgp2YXIgYXBpVXJsID0gcmVxdWlyZSgiLi4vLi4vYXBpVXJsLmpzIik7CgppbXBvcnQgVnVlQ291bnRkb3duIGZyb20gIkBjaGVuZmVuZ3l1YW4vdnVlLWNvdW50ZG93biI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBWdWVDb3VudGRvd246IFZ1ZUNvdW50ZG93bgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFuc3dlcjogW10sCiAgICAgIGl0ZW1zOiBbXSwKICAgICAgaXRlbWlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgIHF1ZXN0aW9uOiBudWxsLAogICAgICAvLyBzY29yZTogbnVsbCwKICAgICAgc3RhdHVzX2NvcnJlY3Q6IG51bGwsCiAgICAgIHBpY2tlZEFuc3dlcjogbnVsbCwKICAgICAgY29ycmVjdDogMCwKICAgICAgd3JvbmdBbnN3ZXI6IGZhbHNlLAogICAgICBwb2ludDogMCwKICAgICAgcmVzdWx0OiBmYWxzZSwKICAgICAgdG90YWxfc2NvcmU6IDAsCiAgICAgIGNvdW50aW5nOiB0cnVlLAogICAgICBkdXJhdGlvbjogMTAwMDAwMCwKICAgICAgY291bnRkb3duOiBmYWxzZSwKICAgICAgcXVlc3Rpb25JbmRleDogMCwKICAgICAgdXNlclJlc3BvbnNlczogQXJyYXkoKQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMubG9hZERhdGEoKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWREYXRhOiBmdW5jdGlvbiBsb2FkRGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgYXhpb3MuZ2V0KCJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3F1ZXN0aW9uLyIgKyBfdGhpczIuaXRlbWlkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBfdGhpczIuaXRlbXMgPSByZXNwb25zZS5kYXRhLmRhdGFbMF0ucXVlc3Rpb247CiAgICAgICAgICAgICAgICAgIF90aGlzMi5kdXJhdGlvbiA9IHJlc3BvbnNlLmRhdGEuZGF0YVswXS5kdXJhdGlvbjsKICAgICAgICAgICAgICAgICAgX3RoaXMyLmR1cmF0aW9uICsgMTAwMDA7CiAgICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhfdGhpczIuZHVyYXRpb24pOwogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcG9zdFJlc3VsdDogZnVuY3Rpb24gcG9zdFJlc3VsdCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgicmVzb2x2ZWQiKTsKICAgICAgICAgICAgICAgICAgICB2YXIgc3RyVXJsID0gYXBpVXJsLnJlc3VsdF9wb3N0OwogICAgICAgICAgICAgICAgICAgIHZhciBtZXRob2QgPSAicG9zdCI7CiAgICAgICAgICAgICAgICAgICAgYXhpb3MoewogICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiBtZXRob2QsCiAgICAgICAgICAgICAgICAgICAgICB1cmw6IHN0clVybCwKICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdXNlcl9pZDogMSwKICAgICAgICAgICAgICAgICAgICAgICAgcXVpel9pZDogX3RoaXMzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgICAgICAgICAgICAgICAgICAgIHNjb3JlOiBfdGhpczMucG9pbnQsCiAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsX3Njb3JlOiBfdGhpczMudG90YWxfc2NvcmUKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgICAgX3RoaXMzLmxvYWREYXRhKCk7CgogICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgICAgICBfdGhpczMuZXJyb3JzLnB1c2goZSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0sIDIwMCk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgY2hlY2tBbnN3ZXI6IGZ1bmN0aW9uIGNoZWNrQW5zd2VyKGtleSwgc2NvcmUsIGluZCkgewogICAgICB3aW5kb3cuY29uc29sZS5sb2coa2V5LCAiS0VZIik7CiAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhzY29yZSwgInNjb3JlIik7CiAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhpbmQsICJpbmRleCIpOwogICAgICB0aGlzLmNvbEFuc3cgPSBba2V5LCBzY29yZSwgaW5kXTsKICAgICAgd2luZG93LmNvbnNvbGUubG9nKHRoaXMuY29sQW5zdywgImFsbGFuc3dlciIpOwogICAgICB0aGlzLnRvdGFsX3Njb3JlID0gdGhpcy50b3RhbF9zY29yZSArIHNjb3JlOwogICAgICB3aW5kb3cuY29uc29sZS5sb2coInRvdGFsIiwgdGhpcy50b3RhbF9zY29yZSk7CgogICAgICBpZiAoa2V5ID09IDEpIHsKICAgICAgICB0aGlzLnBvaW50ICs9IHNjb3JlOwogICAgICAgIHRoaXMuY29ycmVjdCsrOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy50b3RhbF9zY29yZTsKICAgIH0sCiAgICBsb2FkUmVzdWx0OiBmdW5jdGlvbiBsb2FkUmVzdWx0KCkgewogICAgICB0aGlzLmNoZWNrQW5zd2VyKDAsIDApOyAvLyB3aW5kb3cuY29uc29sZS5sb2codGhpcy5yYWRpb0dyb3VwLCAicGlja2VkIik7CgogICAgICB0aGlzLnBvc3RSZXN1bHQoKTsKICAgICAgdGhpcy5yZXN1bHQgPSB0cnVlOwogICAgfSwKICAgIHN0YXJ0Q291bnRkb3duOiBmdW5jdGlvbiBzdGFydENvdW50ZG93bigpIHsKICAgICAgdGhpcy5jb3VudGluZyA9IHRydWU7CiAgICB9LAogICAgb25Db3VudGRvd25FbmQ6IGZ1bmN0aW9uIG9uQ291bnRkb3duRW5kKCkgewogICAgICB0aGlzLmNvdW50aW5nID0gZmFsc2U7CiAgICAgIHRoaXMuY291bnRkb3duID0gdHJ1ZTsKICAgIH0sCiAgICAvLyBHbyB0byBuZXh0IHF1ZXN0aW9uCiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KCkgewogICAgICB0aGlzLnF1ZXN0aW9uSW5kZXgrKzsKICAgICAgd2luZG93LmNvbnNvbGUubG9nKHRoaXMudXNlclJlc3BvbnNlcyk7CiAgICB9LAogICAgLy8gR28gdG8gcHJldmlvdXMgcXVlc3Rpb24KICAgIHByZXY6IGZ1bmN0aW9uIHByZXYoKSB7CiAgICAgIHRoaXMucXVlc3Rpb25JbmRleC0tOwogICAgfSwKICAgIHNjb3JlOiBmdW5jdGlvbiBzY29yZSgpIHsKICAgICAgLy9maW5kIHRoZSBoaWdoZXN0IG9jY3VyZW5jZSBpbiByZXNwb25zZXMKICAgICAgdmFyIG1vZGVNYXAgPSB7fTsKICAgICAgdmFyIG1heEVsID0gdGhpcy51c2VyUmVzcG9uc2VzWzBdLAogICAgICAgICAgbWF4Q291bnQgPSAxOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnVzZXJSZXNwb25zZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgZWwgPSB0aGlzLnVzZXJSZXNwb25zZXNbaV07CiAgICAgICAgaWYgKG1vZGVNYXBbZWxdID09IG51bGwpIG1vZGVNYXBbZWxdID0gMTtlbHNlIG1vZGVNYXBbZWxdKys7CgogICAgICAgIGlmIChtb2RlTWFwW2VsXSA+IG1heENvdW50KSB7CiAgICAgICAgICBtYXhFbCA9IGVsOwogICAgICAgICAgbWF4Q291bnQgPSBtb2RlTWFwW2VsXTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBtYXhFbDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["TakeExam.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA,OAAA,KAAA,MAAA,OAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,OAAA,YAAA,MAAA,6BAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA;AACA,MAAA,cAAA,EAAA,IANA;AAOA,MAAA,YAAA,EAAA,IAPA;AAQA,MAAA,OAAA,EAAA,CARA;AASA,MAAA,WAAA,EAAA,KATA;AAUA,MAAA,KAAA,EAAA,CAVA;AAWA,MAAA,MAAA,EAAA,KAXA;AAYA,MAAA,WAAA,EAAA,CAZA;AAaA,MAAA,QAAA,EAAA,IAbA;AAcA,MAAA,QAAA,EAAA,OAdA;AAeA,MAAA,SAAA,EAAA,KAfA;AAgBA,MAAA,aAAA,EAAA,CAhBA;AAiBA,MAAA,aAAA,EAAA,KAAA;AAjBA,KAAA;AAmBA,GAxBA;AAyBA,EAAA,OAzBA,qBAyBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,QAAA,EADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,GA3BA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CACA,GADA,CACA,wCAAA,MAAA,CAAA,MADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,kBAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,EAAA,QAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,EAAA,QAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,KAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,QAAA;AACA,iBAPA,EAQA,KARA,CAQA,UAAA,KAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,iBAVA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,KAbA;AAcA,IAAA,UAdA,wBAcA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AAEA,wBAAA,MAAA,GAAA,MAAA,CAAA,WAAA;AACA,wBAAA,MAAA,GAAA,MAAA;AACA,oBAAA,KAAA,CAAA;AACA,sBAAA,MAAA,EAAA,MADA;AAEA,sBAAA,GAAA,EAAA,MAFA;AAGA,sBAAA,IAAA,EAAA;AACA,wBAAA,OAAA,EAAA,CADA;AAEA,wBAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAFA;AAGA,wBAAA,KAAA,EAAA,MAAA,CAAA,KAHA;AAIA,wBAAA,WAAA,EAAA,MAAA,CAAA;AAJA;AAHA,qBAAA,CAAA,CAUA,IAVA,CAUA,UAAA,QAAA,EAAA;AACA,sBAAA,MAAA,CAAA,QAAA;;AACA,sBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,qBAbA,EAcA,KAdA,CAcA,UAAA,CAAA,EAAA;AACA,sBAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,qBAhBA;AAiBA,mBAtBA,EAsBA,GAtBA,CAAA;AAuBA,iBAxBA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA,KAxCA;AAyCA,IAAA,WAzCA,uBAyCA,GAzCA,EAyCA,KAzCA,EAyCA,GAzCA,EAyCA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,KAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,OAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,OAAA;AACA,WAAA,OAAA,GAAA,CAAA,GAAA,EAAA,KAAA,EAAA,GAAA,CAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,OAAA,EAAA,WAAA;AAEA,WAAA,WAAA,GAAA,KAAA,WAAA,GAAA,KAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,KAAA,WAAA;;AACA,UAAA,GAAA,IAAA,CAAA,EAAA;AACA,aAAA,KAAA,IAAA,KAAA;AACA,aAAA,OAAA;AACA;;AAEA,aAAA,KAAA,WAAA;AACA,KAxDA;AAyDA,IAAA,UAzDA,wBAyDA;AACA,WAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EADA,CAEA;;AACA,WAAA,UAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,KA9DA;AA+DA,IAAA,cAAA,EAAA,0BAAA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KAjEA;AAkEA,IAAA,cAAA,EAAA,0BAAA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KArEA;AAsEA;AACA,IAAA,IAAA,EAAA,gBAAA;AACA,WAAA,aAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,aAAA;AACA,KA1EA;AA2EA;AACA,IAAA,IAAA,EAAA,gBAAA;AACA,WAAA,aAAA;AACA,KA9EA;AA+EA,IAAA,KAAA,EAAA,iBAAA;AACA;AACA,UAAA,OAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,KAAA,aAAA,CAAA,CAAA,CAAA;AAAA,UACA,QAAA,GAAA,CADA;;AAEA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,aAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,EAAA,GAAA,KAAA,aAAA,CAAA,CAAA,CAAA;AACA,YAAA,OAAA,CAAA,EAAA,CAAA,IAAA,IAAA,EAAA,OAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,KACA,OAAA,CAAA,EAAA,CAAA;;AACA,YAAA,OAAA,CAAA,EAAA,CAAA,GAAA,QAAA,EAAA;AACA,UAAA,KAAA,GAAA,EAAA;AACA,UAAA,QAAA,GAAA,OAAA,CAAA,EAAA,CAAA;AACA;AACA;;AACA,aAAA,KAAA;AACA;AA9FA;AA5BA,CAAA","sourcesContent":["<template>\r\n  <v-container>\r\n    <vue-countdown\r\n      v-if=\"counting\"\r\n      :time=\"10000\"\r\n      @end=\"onCountdownEnd\"\r\n      v-slot=\"{ totalSeconds }\"\r\n      >Duration: {{ totalSeconds }} later</vue-countdown\r\n    >\r\n\r\n    <div v-for=\"(quest, index) in items\" v-bind:key=\"index\">\r\n      <v-card class=\"mx-auto mt-1\" max-width=\"400\" tile>\r\n        <v-list class=\"mx-5\">\r\n          <v-list-item-group color=\"indigo darken-4\">\r\n            <v-list-item-title class=\"mb-3\"\r\n              ><h4>\r\n                <span class=\"black--text\"\r\n                  >{{ 1 + index++ }}. {{ quest.question }}\r\n                </span>\r\n                <span class=\"float-right\"\r\n                  ><h5>{{ quest.score }}pt</h5></span\r\n                >\r\n              </h4>\r\n            </v-list-item-title>\r\n\r\n            <v-list-item\r\n              v-for=\"answ in quest.answer\"\r\n              :key=\"answ\"\r\n              v-model=\"userResponses[(answ.status_correct, quest.score)]\"\r\n              @click.native=\"\r\n                checkAnswer(answ.status_correct, quest.score, index)\r\n              \"\r\n            >\r\n              <v-list-item-content>\r\n                <span>\r\n                  <v-list-item-title\r\n                    >{{ answ.answer }}\r\n                    <span v-if=\"result == true\"\r\n                      ><span v-if=\"answ.status_correct == 1\"\r\n                        ><i\r\n                          class=\"far fa-check-circle float-right\"\r\n                          style=\"color: green\"\r\n                        ></i>\r\n                      </span>\r\n                      <span v-else\r\n                        ><i\r\n                          class=\"far fa-times-circle float-right\"\r\n                          style=\"color: red\"\r\n                        ></i>\r\n                      </span>\r\n                    </span>\r\n                  </v-list-item-title>\r\n                </span>\r\n              </v-list-item-content>\r\n            </v-list-item>\r\n          </v-list-item-group>\r\n        </v-list>\r\n      </v-card>\r\n    </div>\r\n\r\n    <!-- <div class=\"callout\">\r\n      <div v-for=\"(question, index) in items\" :key=\"index\"> -->\r\n    <!-- Hide all questions, show only the one with index === to current question index -->\r\n    <!-- <div v-show=\"index === questionIndex\">\r\n          <h3>{{ question.question }}</h3>\r\n          <ol> -->\r\n    <!-- for each response of the current question -->\r\n    <!-- <li v-for=\"response in question.answer\" :key=\"response\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  v-bind:value=\"response.answer\"\r\n                  v-bind:name=\"index\"\r\n                  v-model=\"userResponses[(index, question.status_correct)]\"\r\n                />\r\n                {{ response.answer }}\r\n              </label>\r\n            </li>\r\n          </ol> -->\r\n    <!-- The two navigation buttons -->\r\n    <!-- Note: prev is hidden on first question -->\r\n    <!-- <button\r\n            class=\"secondary button\"\r\n            v-if=\"questionIndex > 0\"\r\n            v-on:click=\"prev\"\r\n          >\r\n            prev\r\n          </button>\r\n          <button class=\"success button\" v-on:click=\"next\">next</button>\r\n        </div>\r\n      </div> -->\r\n\r\n    <!-- Last page, quiz is finished, display result -->\r\n    <!-- <div v-show=\"questionIndex === items.questions.length()\"> -->\r\n    <!-- <h3>Your Results</h3>\r\n        <p>You are: {{ score() }}</p> -->\r\n    <!-- </div> -->\r\n    <!-- </div> -->\r\n\r\n    <v-layout justify-center v-if=\"result == false || countdown == false\">\r\n      <v-btn\r\n        color=\"primary darken-1\"\r\n        @click=\"loadResult()\"\r\n        max-width=\"10rem\"\r\n        dark\r\n        class=\"mt-3\"\r\n      >\r\n        <h6>Submit</h6>\r\n      </v-btn>\r\n    </v-layout>\r\n    <v-layout justify-center>\r\n      <span v-if=\"result == true\">\r\n        <v-responsive\r\n          class=\"text-center green lighten-1 rounded-circle d-inline-flex align-center justify-center ma-3\"\r\n          height=\"150\"\r\n          width=\"150\"\r\n        >\r\n          <h4>Result: {{ this.point }}/ {{ this.total_score }}</h4>\r\n        </v-responsive>\r\n      </span>\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nconst apiUrl = require(\"../../apiUrl.js\");\r\n\r\nimport VueCountdown from \"@chenfengyuan/vue-countdown\";\r\nexport default {\r\n  components: {\r\n    VueCountdown,\r\n  },\r\n  data() {\r\n    return {\r\n      answer: [],\r\n      items: [],\r\n      itemid: this.$route.params.id,\r\n      question: null,\r\n      // score: null,\r\n      status_correct: null,\r\n      pickedAnswer: null,\r\n      correct: 0,\r\n      wrongAnswer: false,\r\n      point: 0,\r\n      result: false,\r\n      total_score: 0,\r\n      counting: true,\r\n      duration: 1000000,\r\n      countdown: false,\r\n      questionIndex: 0,\r\n      userResponses: Array(),\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.loadData();\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      axios\r\n        .get(\"http://127.0.0.1:8000/api/question/\" + this.itemid)\r\n        .then((response) => {\r\n          this.items = response.data.data[0].question;\r\n          this.duration = response.data.data[0].duration;\r\n          this.duration + 10000;\r\n          window.console.log(this.duration);\r\n        })\r\n        .catch((error) => {\r\n          window.console.log(error);\r\n        });\r\n    },\r\n    async postResult() {\r\n      new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve(\"resolved\");\r\n\r\n          let strUrl = apiUrl.result_post;\r\n          let method = \"post\";\r\n          axios({\r\n            method: method,\r\n            url: strUrl,\r\n            data: {\r\n              user_id: 1,\r\n              quiz_id: this.$route.params.id,\r\n              score: this.point,\r\n              total_score: this.total_score,\r\n            },\r\n          })\r\n            .then((response) => {\r\n              this.loadData();\r\n              window.console.log(response.data);\r\n            })\r\n            .catch((e) => {\r\n              this.errors.push(e);\r\n            });\r\n        }, 200);\r\n      });\r\n    },\r\n    checkAnswer(key, score, ind) {\r\n      window.console.log(key, \"KEY\");\r\n      window.console.log(score, \"score\");\r\n      window.console.log(ind, \"index\");\r\n      this.colAnsw = [key, score, ind];\r\n      window.console.log(this.colAnsw, \"allanswer\");\r\n\r\n      this.total_score = this.total_score + score;\r\n      window.console.log(\"total\", this.total_score);\r\n      if (key == 1) {\r\n        this.point += score;\r\n        this.correct++;\r\n      }\r\n\r\n      return this.total_score;\r\n    },\r\n    loadResult() {\r\n      this.checkAnswer(0, 0);\r\n      // window.console.log(this.radioGroup, \"picked\");\r\n      this.postResult();\r\n      this.result = true;\r\n    },\r\n    startCountdown: function () {\r\n      this.counting = true;\r\n    },\r\n    onCountdownEnd: function () {\r\n      this.counting = false;\r\n      this.countdown = true;\r\n    },\r\n    // Go to next question\r\n    next: function () {\r\n      this.questionIndex++;\r\n      window.console.log(this.userResponses);\r\n    },\r\n    // Go to previous question\r\n    prev: function () {\r\n      this.questionIndex--;\r\n    },\r\n    score: function () {\r\n      //find the highest occurence in responses\r\n      var modeMap = {};\r\n      var maxEl = this.userResponses[0],\r\n        maxCount = 1;\r\n      for (var i = 0; i < this.userResponses.length; i++) {\r\n        var el = this.userResponses[i];\r\n        if (modeMap[el] == null) modeMap[el] = 1;\r\n        else modeMap[el]++;\r\n        if (modeMap[el] > maxCount) {\r\n          maxEl = el;\r\n          maxCount = modeMap[el];\r\n        }\r\n      }\r\n      return maxEl;\r\n    },\r\n  },\r\n};\r\n</script>"],"sourceRoot":"src/views/exam"}]}
{"remainingRequest":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\src\\views\\exam\\TakeExam.vue?vue&type=style&index=0&id=1b1ef2ac&scoped=true&lang=css&","dependencies":[{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\src\\views\\exam\\TakeExam.vue","mtime":1616611550849},{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\LMS\\Exam_service\\LMS-template\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudi1saXN0LWl0ZW0tLWFjdGl2ZSB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDsNCiAgY29sb3I6ICNmZmYgIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["TakeExam.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8LA;AACA;AACA;AACA","file":"TakeExam.vue","sourceRoot":"src/views/exam","sourcesContent":["<template>\r\n  <v-container>\r\n    <vue-countdown\r\n      v-if=\"counting\"\r\n      :time=\"100000\"\r\n      @end=\"onCountdownEnd\"\r\n      v-slot=\"{ totalSeconds }\"\r\n      >Duration: {{ totalSeconds }} later</vue-countdown\r\n    >\r\n\r\n    <v-card class=\"mx-auto mt-1\" max-width=\"400\" tile v-if=\"result == false\">\r\n      <v-list class=\"mx-5\">\r\n        <v-list-item-group color=\"indigo darken-4\">\r\n          <v-list-item-title class=\"mb-3\"\r\n            ><h4>\r\n              <span class=\"black--text\"\r\n                >{{ items[currentQuestion].question }}\r\n              </span>\r\n              <span class=\"float-right\"\r\n                ><h5>{{ items[currentQuestion].score }}pt</h5></span\r\n              >\r\n            </h4>\r\n          </v-list-item-title>\r\n\r\n          <v-list-item\r\n            v-for=\"answ in items[currentQuestion].answer\"\r\n            :key=\"answ\"\r\n            @click=\"\r\n              checkAnswer(answ.status_correct, items[currentQuestion].score)\r\n            \"\r\n          >\r\n            <v-list-item-content>\r\n              <v-list-item-title class=\"black--text\"\r\n                >{{ answ.answer }}\r\n                <!-- <span v-if=\"result == true\"\r\n                    ><span v-if=\"answ.status_correct == 1\"\r\n                      ><i\r\n                        class=\"far fa-check-circle float-right\"\r\n                        style=\"color: green\"\r\n                      ></i>\r\n                    </span>\r\n                    <span v-else\r\n                      ><i\r\n                        class=\"far fa-times-circle float-right\"\r\n                        style=\"color: red\"\r\n                      ></i>\r\n                    </span>\r\n                  </span> -->\r\n              </v-list-item-title>\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n        </v-list-item-group>\r\n      </v-list>\r\n      <span class=\"float-right\"\r\n        >{{ currentQuestion + 1 }} of {{ items.length }}</span\r\n      >\r\n    </v-card>\r\n\r\n    <v-layout justify-center v-if=\"result == true\">\r\n      <span>\r\n        <v-responsive\r\n          class=\"text-center green lighten-1 rounded-circle d-inline-flex align-center justify-center ma-3\"\r\n          height=\"150\"\r\n          width=\"150\"\r\n        >\r\n          <h4>Result: {{ this.point }}/ {{ this.total_point }}</h4>\r\n        </v-responsive>\r\n      </span>\r\n    </v-layout>\r\n    <v-layout justify-center>\r\n      <router-link\r\n        v-if=\"result == true\"\r\n        style=\"display: inline-block; text-decoration: none\"\r\n        :to=\"'../course'\"\r\n      >\r\n        <v-btn text class=\"error\">Go Back</v-btn>\r\n      </router-link>\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nconst apiUrl = require(\"../../apiUrl.js\");\r\n\r\nimport VueCountdown from \"@chenfengyuan/vue-countdown\";\r\nexport default {\r\n  components: {\r\n    VueCountdown,\r\n  },\r\n  data() {\r\n    return {\r\n      answer: [],\r\n      items: [],\r\n      itemid: this.$route.params.id,\r\n      question: null,\r\n      // score: null,\r\n      status_correct: null,\r\n      pickedAnswer: null,\r\n      correct: 0,\r\n      wrongAnswer: false,\r\n      point: 0,\r\n      result: false,\r\n      total_point: 0,\r\n      counting: true,\r\n      duration: 1000000,\r\n      countdown: false,\r\n      questionIndex: 0,\r\n      userResponses: Array(),\r\n      currentQuestion: 0,\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.loadData();\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      axios\r\n        .get(\"http://127.0.0.1:8000/api/question/\" + this.itemid)\r\n        .then((response) => {\r\n          this.items = response.data.data[0].question;\r\n          this.duration = response.data.data[0].duration;\r\n          // this.duration + 10000;\r\n          // window.console.log(this.duration);\r\n        })\r\n        .catch((error) => {\r\n          window.console.log(error);\r\n        });\r\n    },\r\n    async postResult() {\r\n      new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve(\"resolved\");\r\n\r\n          let strUrl = apiUrl.result_post;\r\n          let method = \"post\";\r\n          axios({\r\n            method: method,\r\n            url: strUrl,\r\n            data: {\r\n              user_id: 1,\r\n              quiz_id: this.itemid,\r\n              score: this.point,\r\n              total_score: this.total_point,\r\n            },\r\n          })\r\n            .then((response) => {\r\n              this.loadData();\r\n              window.console.log(response.data);\r\n            })\r\n            .catch((e) => {\r\n              this.errors.push(e);\r\n            });\r\n        }, 200);\r\n      });\r\n    },\r\n    checkAnswer(key, score) {\r\n      window.console.log(key, \"KEY\");\r\n      window.console.log(score, \"score\");\r\n      window.console.log(this.items.length, \"item length\");\r\n      // this.$event.target.classList.toggle(active);\r\n      this.total_point += score;\r\n      window.console.log(\"total\", this.total_point);\r\n      // this.answ.forEach((element) => {\r\n      //   element.activeClass = \"\";\r\n      // });\r\n      if (key == 1) {\r\n        this.point += score;\r\n        this.correct++;\r\n      }\r\n      if (this.currentQuestion == this.items.length - 1) {\r\n        this.loadResult();\r\n      }\r\n      this.currentQuestion++;\r\n    },\r\n    loadResult() {\r\n      this.postResult();\r\n      this.result = true;\r\n    },\r\n    startCountdown: function () {\r\n      this.counting = true;\r\n    },\r\n    onCountdownEnd: function () {\r\n      this.counting = false;\r\n      this.countdown = true;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.v-list-item--active {\r\n  background-color: #fff !important;\r\n  color: #fff !important;\r\n}\r\n</style>"]}]}
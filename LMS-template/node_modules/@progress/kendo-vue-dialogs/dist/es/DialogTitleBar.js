// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
import { getTemplate } from '@progress/kendo-vue-common';
/**
 * Represents the default `DialogTitleBar` component.
 */

var DialogTitleBar = {
  props: {
    id: String,
    closeIcon: {
      type: Boolean,
      default: true
    },
    title: String,
    titleRender: [String, Function, Object]
  },
  // @ts-ignore
  setup: !gh ? undefined : function () {
    var v3 = !!gh;
    return {
      v3: v3
    };
  },
  methods: {
    onCloseButtonClick: function onCloseButtonClick(e) {
      this.$emit('closebuttonclick', e);
    }
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
        id = _a.id,
        closeIcon = _a.closeIcon,
        titleRender = _a.titleRender,
        title = _a.title;
    var titleElement;
    titleElement = getTemplate.call(this, {
      h: h,
      template: titleRender,
      defaultRendering: title
    });
    return h("div", {
      "class": "k-window-titlebar k-dialog-titlebar k-header",
      id: id,
      attrs: this.v3 ? undefined : {
        id: id
      }
    }, [h("div", {
      "class": "k-window-title k-dialog-title"
    }, [titleElement]), h("div", {
      "class": "k-window-actions k-dialog-actions"
    }, [closeIcon && h("a", {
      href: "#",
      attrs: this.v3 ? undefined : {
        href: "#",
        role: "button",
        "aria-label": "Close"
      },
      role: "button",
      "aria-label": "Close",
      onClick: this.onCloseButtonClick,
      on: this.v3 ? undefined : {
        "click": this.onCloseButtonClick
      },
      "class": "k-button k-bare k-button-icon k-window-action k-dialog-action k-dialog-close"
    }, [h("span", {
      "class": "k-icon k-i-x"
    })])])]);
  }
};
export { DialogTitleBar };
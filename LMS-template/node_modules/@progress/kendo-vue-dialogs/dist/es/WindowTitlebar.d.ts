import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { windowStage } from './StageEnum';
/**
 * @hidden
 */
export interface WindowTitleBarProps {
    /**
     * @hidden
     */
    closebuttonclick?: (event: any) => void;
    /**
     * @hidden
     */
    dblclick?: (event: any) => void;
    /**
     * @hidden
     */
    minimizeclick?: (event: any) => void;
    /**
     * @hidden
     */
    fullscreenclick?: (event: any) => void;
    /**
     * @hidden
     */
    restoreclick?: (event: any) => void;
    /**
     * @hidden
     */
    id?: string;
    /**
     * @hidden
     */
    title?: string;
    /**
     * @hidden
     */
    titleRender?: any;
    /**
     * @hidden
     */
    stage?: windowStage | string;
    /**
     * @hidden
     */
    closeButton?: any;
    /**
     * @hidden
     */
    minimizeButton?: any;
    /**
     * @hidden
     */
    maximizeButton?: any;
    /**
     * @hidden
     */
    restoreButton?: any;
}
/**
 * @hidden
 */
export interface WindowTitleBarMethods extends Vue {
    onDoubleClick: (e: any) => void;
    onMinimizeClick: (e: any) => void;
    onFullScreenClick: (e: any) => void;
    onRestoreClick: (e: any) => void;
    onCloseClick: (e: any) => void;
}
/**
 * Represents the default `WindowTitleBar` component.
 */
declare let WindowTitleBar: ComponentOptions<Vue, DefaultData<{}>, DefaultMethods<WindowTitleBarMethods>, {}, RecordPropsDefinition<WindowTitleBarProps>>;
export { WindowTitleBar };
